package io.orkes.conductor.client.model.integration;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Assertions;

import java.util.Arrays;

public class TestSerDerIntegrationDef {

    @Test
    public void testSerializationDeserialization() throws Exception {
        String serverJson = "{\"iconName\":\"sample_iconName\",\"configuration\":[{\"fieldName\":{\"values\":[\"api_key\",\"user\",\"endpoint\",\"authUrl\",\"environment\",\"projectName\",\"indexName\",\"publisher\",\"password\",\"namespace\",\"batchSize\",\"batchWaitTime\",\"visibilityTimeout\",\"connectionType\",\"consumer\",\"stream\",\"batchPollConsumersCount\",\"consumer_type\",\"region\",\"awsAccountId\",\"externalId\",\"roleArn\",\"protocol\",\"mechanism\",\"port\",\"schemaRegistryUrl\",\"schemaRegistryApiKey\",\"schemaRegistryApiSecret\",\"authenticationType\",\"truststoreAuthenticationType\",\"tls\",\"cipherSuite\",\"pubSubMethod\",\"keyStorePassword\",\"keyStoreLocation\",\"schemaRegistryAuthType\",\"valueSubjectNameStrategy\",\"datasourceURL\",\"jdbcDriver\",\"subscription\",\"serviceAccountCredentials\",\"file\",\"tlsFile\",\"queueManager\",\"groupId\",\"channel\",\"dimensions\",\"distance_metric\",\"indexing_method\",\"inverted_list_count\"],\"constants\":{\"awsAccountId\":\"(PASSWORD)\",\"schemaRegistryAuthType\":\"(TEXT)\",\"tlsFile\":\"(FILE)\",\"pubSubMethod\":\"(TEXT)\",\"groupId\":\"(TEXT)\",\"channel\":\"(TEXT)\",\"consumer_type\":\"(TEXT)\",\"valueSubjectNameStrategy\":\"(TEXT)\",\"cipherSuite\":\"(TEXT)\",\"serviceAccountCredentials\":\"(TEXT)\",\"connectionType\":\"(TEXT)\",\"password\":\"(PASSWORD)\",\"protocol\":\"(TEXT)\",\"schemaRegistryApiSecret\":\"(PASSWORD)\",\"roleArn\":\"(TEXT)\",\"indexName\":\"(TEXT)\",\"indexing_method\":\"(TEXT)\",\"port\":\"(TEXT)\",\"publisher\":\"(TEXT)\",\"projectName\":\"(TEXT)\",\"region\":\"(TEXT)\",\"keyStoreLocation\":\"(TEXT)\",\"subscription\":\"(TEXT)\",\"visibilityTimeout\":\"(TEXT)\",\"truststoreAuthenticationType\":\"(TEXT)\",\"authUrl\":\"(TEXT)\",\"endpoint\":\"(TEXT)\",\"file\":\"(FILE)\",\"queueManager\":\"(TEXT)\",\"stream\":\"(TEXT)\",\"mechanism\":\"(TEXT)\",\"datasourceURL\":\"(TEXT)\",\"consumer\":\"(TEXT)\",\"schemaRegistryUrl\":\"(TEXT)\",\"jdbcDriver\":\"(TEXT)\",\"keyStorePassword\":\"(PASSWORD)\",\"inverted_list_count\":\"(TEXT)\",\"externalId\":\"(PASSWORD)\",\"environment\":\"(TEXT)\",\"api_key\":\"(PASSWORD)\",\"batchPollConsumersCount\":\"(TEXT)\",\"namespace\":\"(TEXT)\",\"batchWaitTime\":\"(TEXT)\",\"tls\":\"(TEXT)\",\"authenticationType\":\"(TEXT)\",\"distance_metric\":\"(TEXT)\",\"batchSize\":\"(TEXT)\",\"schemaRegistryApiKey\":\"(TEXT)\",\"user\":\"(TEXT)\",\"dimensions\":\"(TEXT)\"},\"sampleValue\":\"api_key\"},\"dependsOn\":[{\"fieldName\":{\"values\":[\"api_key\",\"user\",\"endpoint\",\"authUrl\",\"environment\",\"projectName\",\"indexName\",\"publisher\",\"password\",\"namespace\",\"batchSize\",\"batchWaitTime\",\"visibilityTimeout\",\"connectionType\",\"consumer\",\"stream\",\"batchPollConsumersCount\",\"consumer_type\",\"region\",\"awsAccountId\",\"externalId\",\"roleArn\",\"protocol\",\"mechanism\",\"port\",\"schemaRegistryUrl\",\"schemaRegistryApiKey\",\"schemaRegistryApiSecret\",\"authenticationType\",\"truststoreAuthenticationType\",\"tls\",\"cipherSuite\",\"pubSubMethod\",\"keyStorePassword\",\"keyStoreLocation\",\"schemaRegistryAuthType\",\"valueSubjectNameStrategy\",\"datasourceURL\",\"jdbcDriver\",\"subscription\",\"serviceAccountCredentials\",\"file\",\"tlsFile\",\"queueManager\",\"groupId\",\"channel\",\"dimensions\",\"distance_metric\",\"indexing_method\",\"inverted_list_count\"],\"constants\":{\"awsAccountId\":\"(PASSWORD)\",\"schemaRegistryAuthType\":\"(TEXT)\",\"tlsFile\":\"(FILE)\",\"pubSubMethod\":\"(TEXT)\",\"groupId\":\"(TEXT)\",\"channel\":\"(TEXT)\",\"consumer_type\":\"(TEXT)\",\"valueSubjectNameStrategy\":\"(TEXT)\",\"cipherSuite\":\"(TEXT)\",\"serviceAccountCredentials\":\"(TEXT)\",\"connectionType\":\"(TEXT)\",\"password\":\"(PASSWORD)\",\"protocol\":\"(TEXT)\",\"schemaRegistryApiSecret\":\"(PASSWORD)\",\"roleArn\":\"(TEXT)\",\"indexName\":\"(TEXT)\",\"indexing_method\":\"(TEXT)\",\"port\":\"(TEXT)\",\"publisher\":\"(TEXT)\",\"projectName\":\"(TEXT)\",\"region\":\"(TEXT)\",\"keyStoreLocation\":\"(TEXT)\",\"subscription\":\"(TEXT)\",\"visibilityTimeout\":\"(TEXT)\",\"truststoreAuthenticationType\":\"(TEXT)\",\"authUrl\":\"(TEXT)\",\"endpoint\":\"(TEXT)\",\"file\":\"(FILE)\",\"queueManager\":\"(TEXT)\",\"stream\":\"(TEXT)\",\"mechanism\":\"(TEXT)\",\"datasourceURL\":\"(TEXT)\",\"consumer\":\"(TEXT)\",\"schemaRegistryUrl\":\"(TEXT)\",\"jdbcDriver\":\"(TEXT)\",\"keyStorePassword\":\"(PASSWORD)\",\"inverted_list_count\":\"(TEXT)\",\"externalId\":\"(PASSWORD)\",\"environment\":\"(TEXT)\",\"api_key\":\"(PASSWORD)\",\"batchPollConsumersCount\":\"(TEXT)\",\"namespace\":\"(TEXT)\",\"batchWaitTime\":\"(TEXT)\",\"tls\":\"(TEXT)\",\"authenticationType\":\"(TEXT)\",\"distance_metric\":\"(TEXT)\",\"batchSize\":\"(TEXT)\",\"schemaRegistryApiKey\":\"(TEXT)\",\"user\":\"(TEXT)\",\"dimensions\":\"(TEXT)\"},\"sampleValue\":\"api_key\"},\"dependsOn\":[],\"defaultValue\":\"sample_defaultValue\",\"description\":\"sample_description\",\"optional\":true,\"label\":\"sample_label\",\"fieldType\":{\"values\":[\"DROPDOWN\",\"TEXT\",\"PASSWORD\",\"FILE\"],\"constants\":{\"DROPDOWN\":\"(0)\",\"PASSWORD\":\"(2)\",\"TEXT\":\"(1)\",\"FILE\":\"(3)\"},\"sampleValue\":\"DROPDOWN\"},\"value\":\"sample_value\",\"valueOptions\":[{\"label\":\"sample_label\",\"value\":\"sample_value\"}]}],\"defaultValue\":\"sample_defaultValue\",\"description\":\"sample_description\",\"optional\":true,\"label\":\"sample_label\",\"fieldType\":{\"values\":[\"DROPDOWN\",\"TEXT\",\"PASSWORD\",\"FILE\"],\"constants\":{\"DROPDOWN\":\"(0)\",\"PASSWORD\":\"(2)\",\"TEXT\":\"(1)\",\"FILE\":\"(3)\"},\"sampleValue\":\"DROPDOWN\"},\"value\":\"sample_value\",\"valueOptions\":[{\"label\":\"sample_label\",\"value\":\"sample_value\"}]}],\"name\":\"sample_name\",\"categoryLabel\":\"sample_categoryLabel\",\"description\":\"sample_description\",\"type\":\"sample_type\",\"category\":{\"values\":[\"API\",\"AI_MODEL\",\"VECTOR_DB\",\"RELATIONAL_DB\",\"MESSAGE_BROKER\",\"GIT\",\"EMAIL\"],\"constants\":{\"AI_MODEL\":\"(1)\",\"GIT\":\"(5)\",\"API\":\"(0)\",\"RELATIONAL_DB\":\"(3)\",\"VECTOR_DB\":\"(2)\",\"EMAIL\":\"(6)\",\"MESSAGE_BROKER\":\"(4)\"},\"sampleValue\":\"API\"},\"enabled\":true,\"tags\":[\"sample_tags\"]}";

        ObjectMapper mapper = new ObjectMapper();
        IntegrationDef integrationDef = mapper.readValue(serverJson, IntegrationDef.class);

        Assertions.assertEquals("sample_iconName", integrationDef.getIconName());
        Assertions.assertEquals("sample_categoryLabel", integrationDef.getCategoryLabel());
        Assertions.assertEquals("sample_description", integrationDef.getDescription());
        Assertions.assertTrue(integrationDef.getEnabled());
        Assertions.assertEquals("sample_name", integrationDef.getName());
        Assertions.assertEquals(Arrays.asList("sample_tags"), integrationDef.getTags());
        Assertions.assertEquals("sample_type", integrationDef.getType());
        Assertions.assertEquals("API", integrationDef.getCategory());

        String serializedJson = mapper.writeValueAsString(integrationDef);
        JsonNode originalNode = mapper.readTree(serverJson);
        JsonNode serializedNode = mapper.readTree(serializedJson);

        Assertions.assertEquals(originalNode, serializedNode);
    }
}